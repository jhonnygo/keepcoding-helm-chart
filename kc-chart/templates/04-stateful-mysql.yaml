apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-mysql-statefulset
  namespace: {{ .Values.namespace }}
spec:
  serviceName: mysql
  replicas: {{ .Values.replicaCount.mysql }}
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      affinity:
        # NO PUEDEN ESTAR EN EL MISMO NODO PODS DE MYSQL
        # podAntiAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #   - labelSelector:
        #       matchExpressions:
        #       - key: app
        #         operator: In
        #         values:
        #         - mysql
        #     topologyKey: "kubernetes.io/hostname"
        # TIENE QUE EXISTIR EN EL MISMO NODO POR LO MENOS UN POD DE WORDPRESS
        # podAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #   - labelSelector:
        #       matchExpressions:
        #       - key: app
        #         operator: In
        #         values:
        #         - wordpress
        #     topologyKey: "kubernetes.io/hostname"
      containers:
      - name: mysql-container
        image: mysql:latest
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}-secrets
                key: MYSQL_ROOT_PASSWORD
          - name: MYSQL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: DB_NAME
          - name: MYSQL_USER
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: DB_USER
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}-secrets
                key: DB_PASS
        ports:
        - containerPort: {{ .Values.configmap.DB_PORT }}
          name: mysql
        volumeMounts:
        - name: {{ .Chart.Name }}-mysql-persistent-storage
          mountPath: /var/lib/mysql
        resources:
          limits:
            cpu: {{ .Values.resources.mysql.limits.cpu | quote }}
            memory: {{ .Values.resources.mysql.limits.memory | quote }}
          requests:
            cpu: {{ .Values.resources.mysql.requests.cpu | quote }}
            memory: {{ .Values.resources.mysql.requests.memory | quote }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Chart.Name }}-mysql-persistent-storage
    spec:
      accessModes: [ {{ .Values.pvc.mysql.accessModes | quote }} ] #[ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.pvc.mysql.storageSize }}
